//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NewCampusEntities : DbContext
    {
        public NewCampusEntities()
            : base("name=NewCampusEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<agent> agent { get; set; }
        public virtual DbSet<auteur> auteur { get; set; }
        public virtual DbSet<Avoir> Avoir { get; set; }
        public virtual DbSet<Banque> Banque { get; set; }
        public virtual DbSet<bon_commande> bon_commande { get; set; }
        public virtual DbSet<bon_livraison> bon_livraison { get; set; }
        public virtual DbSet<bon_sortie> bon_sortie { get; set; }
        public virtual DbSet<BonRetour> BonRetour { get; set; }
        public virtual DbSet<client> client { get; set; }
        public virtual DbSet<CumulEnt> CumulEnt { get; set; }
        public virtual DbSet<Cumulsortie> Cumulsortie { get; set; }
        public virtual DbSet<devis> devis { get; set; }
        public virtual DbSet<Dossierpublication> Dossierpublication { get; set; }
        public virtual DbSet<Droit> Droit { get; set; }
        public virtual DbSet<emplacement> emplacement { get; set; }
        public virtual DbSet<Facture> Facture { get; set; }
        public virtual DbSet<FactureDetail> FactureDetail { get; set; }
        public virtual DbSet<facturevente> facturevente { get; set; }
        public virtual DbSet<famille> famille { get; set; }
        public virtual DbSet<ficheauteur> ficheauteur { get; set; }
        public virtual DbSet<fichesuivi> fichesuivi { get; set; }
        public virtual DbSet<fournisseur> fournisseur { get; set; }
        public virtual DbSet<Fourniture> Fourniture { get; set; }
        public virtual DbSet<ligne_avoir> ligne_avoir { get; set; }
        public virtual DbSet<ligne_bc> ligne_bc { get; set; }
        public virtual DbSet<ligne_bl> ligne_bl { get; set; }
        public virtual DbSet<ligne_bs> ligne_bs { get; set; }
        public virtual DbSet<ligne_devis> ligne_devis { get; set; }
        public virtual DbSet<Livre> Livre { get; set; }
        public virtual DbSet<Piece_bonret> Piece_bonret { get; set; }
        public virtual DbSet<Piece_cumulent> Piece_cumulent { get; set; }
        public virtual DbSet<Piece_cumulsortie> Piece_cumulsortie { get; set; }
        public virtual DbSet<piece_fact> piece_fact { get; set; }
        public virtual DbSet<Quittance> Quittance { get; set; }
        public virtual DbSet<Reglement> Reglement { get; set; }
        public virtual DbSet<reservation> reservation { get; set; }
        public virtual DbSet<societe> societe { get; set; }
        public virtual DbSet<sousfamille> sousfamille { get; set; }
        public virtual DbSet<specialite> specialite { get; set; }
        public virtual DbSet<InfoLivre> InfoLivre { get; set; }
    
        public virtual ObjectResult<SelectArticle_Result> SelectArticle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectArticle_Result>("SelectArticle");
        }
    
        public virtual ObjectResult<Livre> spFindlistartstartby(string vartext)
        {
            var vartextParameter = vartext != null ?
                new ObjectParameter("vartext", vartext) :
                new ObjectParameter("vartext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Livre>("spFindlistartstartby", vartextParameter);
        }
    
        public virtual ObjectResult<Livre> spFindlistartstartby(string vartext, MergeOption mergeOption)
        {
            var vartextParameter = vartext != null ?
                new ObjectParameter("vartext", vartext) :
                new ObjectParameter("vartext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Livre>("spFindlistartstartby", mergeOption, vartextParameter);
        }
    
        public virtual ObjectResult<piece_fact> spRapportArt(string codep, Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var codepParameter = codep != null ?
                new ObjectParameter("codep", codep) :
                new ObjectParameter("codep", typeof(string));
    
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<piece_fact>("spRapportArt", codepParameter, date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<piece_fact> spRapportArt(string codep, Nullable<System.DateTime> date1, Nullable<System.DateTime> date2, MergeOption mergeOption)
        {
            var codepParameter = codep != null ?
                new ObjectParameter("codep", codep) :
                new ObjectParameter("codep", typeof(string));
    
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<piece_fact>("spRapportArt", mergeOption, codepParameter, date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<getartinfo_Result> getartinfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getartinfo_Result>("getartinfo");
        }
    
        public virtual ObjectResult<findArtbref_Result> findArtbref()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<findArtbref_Result>("findArtbref");
        }
    }
}
